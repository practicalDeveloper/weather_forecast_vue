{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/CountriesTextBox.vue?e55b","webpack:///./src/pages/ForecastToday.vue?9045","webpack:///./src/App.vue?5c98","webpack:///./src/App.vue","webpack:///./js/extensionsMixin.js","webpack:///./js/resourcesMixin.js","webpack:///./src/components/CountriesCodes.vue","webpack:///./src/components/CountriesCodes.vue?5b2f","webpack:///./src/components/CountriesTextBox.vue","webpack:///./src/components/CountriesTextBox.vue?41c9","webpack:///./src/components/ForecastTypeTabs.vue","webpack:///./src/components/ForecastTypeTabs.vue?83a3","webpack:///./src/App.vue?6697","webpack:///./src/pages/ForecastNow.vue","webpack:///./src/pages/ForecastNow.vue?94d9","webpack:///./src/pages/ForecastToday.vue","webpack:///./src/pages/ForecastToday.vue?87f6","webpack:///./src/pages/ForecastFiveDays.vue","webpack:///./src/pages/ForecastFiveDays.vue?769e","webpack:///./src/router/router.js","webpack:///./src/main.js","webpack:///./src/pages/ForecastNow.vue?7f22","webpack:///./src/components/ForecastTypeTabs.vue?3710","webpack:///./src/pages/ForecastFiveDays.vue?8991"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","id","ref","style","_createElementVNode","_toDisplayString","_ctx","_createVNode","_component_countries_text_box","countriesCodesFilter","$data","countriesCitiesFilter","onGetLocation","$options","onSearchClick","onClearClick","_component_forecast_type_tabs","onGetForecastType","locationCity","_component_router_view","notFoundForecast","_component_countries_codes","onGetCodes","extensionsMixin","created","methods","elementById","this","$el","querySelector","convertToCelsius","val","Math","round","toFixed","addDays","date","days","Date","setDate","getDate","dateWithoutTime","setHours","getRootVarCSS","varName","root","document","rootStyles","getComputedStyle","getPropertyValue","setRootVarCSS","documentElement","setProperty","resourcesMixin","forecastTypes","now","today","fiveDays","weatherForecast","forecastNow","wind","ms","pressure","pressureValue","humidity","cloudiness","forecastFiveDays","temperature","forecastToday","windSpeed","searchPlace","location","allCountriesCities","allCountriesCodes","beforeMount","initialInit","$emit","parseCSV","fileCSV","Promise","resolve","Papa","parse","header","download","complete","results","__exports__","autocomplete","type","_createElementBlock","placeholder","onInput","onKeydown","data-country","data-countryCode","onClick","_hoisted_7","mixins","currentFocus","cityItemsCount","firstDivPosition","maxDivHeight","totalDivPosition","selectedDivValue","props","Array","required","mounted","addEventListener","documentOnClick","beforeDestroy","removeEventListener","e","closeAllLists","target","getCityInput","getInputForm","searchClick","clearClick","focus","updateInput","event","cyrillicPattern","foundCountriesCities","countryName","cityName","countryCode","isCyrrilic","test","getCountryName","GetCountryNameByCode","filter","itemCountry","itemCountryCode","itemCityNameEng","itemCityNameRus","itemCoord","city","toLowerCase","startsWith","country","newItemCountry","cityNameEng","cityCoord","countriesFound","find","item","undefined","ArraySort","showPopupList","dataset","cityeng","countrycode","coord","arr","listDiv","listDivContainer","itemListDiv","createElement","setAttribute","innerHTML","parentNode","appendChild","arrIndex","getElementsByTagName","closeLists","emit","getElementsByClassName","cursor","offset","top","clientHeight","el","rect","getBoundingClientRect","scrollLeft","pageXOffset","scrollTop","pageYOffset","left","elt","x","items","getElementById","removeChild","keyDownInput","cityDiv","keyCode","addActive","preventDefault","click","direction","removeActive","classList","add","scrollIntoView","remove","_Fragment","_renderList","$event","_hoisted_2","changeForecast","evt","tablinks","className","replace","currentTarget","components","CountriesCodes","CountriesTextBox","ForecastTypeTabs","countriesCodes","countriesCities","mapObject","locationCityEng","locationCountry","locationCountryCode","locationCoord","weatherApi","forecastType","resizeHandler","destroyed","setShortWeatherArea","Map","$refs","layers","TileLayer","source","OSM","view","View","zoom","center","constrainResolution","computed","searchLocationClick","proceedForecastType","setNormalWeatherArea","getCountriesCodes","codeName","getForecastType","getNowWeather","calculateCoordinates","isFoundLocation","foundData","reCenterMap","$router","params","currentCity","currentCountry","forecastData","JSON","stringify","resetMap","getTodayWeather","woTime","resultsData","list","itemDate","valueOf","getFiveDaysWeather","getHours","locodeCoord","split","a","b","quotientA","floor","quotientB","remainderA","remainderB","lat","long","includes","latitude","longitude","getView","setZoom","setCenter","fromLonLat","removeMapMarker","VectorSource","addFeatures","Feature","Point","layer","VectorLayer","addLayer","getLayers","getArray","forEach","removeLayer","place","code","openWeatherType","fetch","then","res","json","getLocation","paramCity","paramCityEng","paramCountry","paramCountryCode","paramCoord","isFound","isFoundSecond","indexOf","substr","substrEng","substrBrackets","trim","substrBrackets2","currentLocation","render","src","width","height","getData","$route","getTemperature","getWind","getPressure","getClouds","getHumidity","getDescription","getIcon","icon","String","time","_hoisted_5","getForecastData","convert","index","array","temp","iconData","iconPic","forecastItem","day","month","_hoisted_8","prevForecastItem","_hoisted_10","_hoisted_11","_hoisted_16","_hoisted_24","getItemForecastData","getForecastItem","prevDate","prevItem","weekday","monthName","toLocaleString","dayName","getDay","dateItem","forecastItemData","forecastPrevItemData","routes","path","component","ForecastNow","ForecastToday","ForecastFiveDays","router","createRouter","history","createWebHistory","process","app","createApp","App","use","mount"],"mappings":"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","file":"js/app.fd7fb762.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/weather_forecast_vue/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./CountriesTextBox.vue?vue&type=style&index=0&id=6f4d1546&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ForecastToday.vue?vue&type=style&index=0&id=7828ee0f&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=5a7f26ce&lang=css\"","<template>\r\n    <div class=\"grid-container\">\r\n        \r\n        <div class=\"header\">\r\n            <div class=\"Title\">\r\n                <p>{{weatherForecast}}</p>\r\n            </div>\r\n\r\n            <!-- Text area to search place -->\r\n            <div class=\"textSearchArea\">\r\n                <countries-text-box v-bind:countriesCodesFilter=\"countriesCodes\" \r\n                    v-bind:countriesCitiesFilter=\"countriesCities\"\r\n                    @getLocation=\"getLocation\" @searchClick=\"searchLocationClick\"\r\n                    @clearClick=\"clearClick\" />\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Text area and map -->\r\n        <div class=\"content\">\r\n            <!-- OpenStreet map -->\r\n            <div class=\"mapArea\" id=\"gMapArea\">\r\n                <div ref=\"map-root\" style=\"width: 100%; height: 100%\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Weather forecast-->\r\n        <div class=\"sidebar\">\r\n\r\n            <!-- Menu (Now, today, 5 days) -->\r\n            <forecast-type-tabs @getForecastType=\"getForecastType\" />\r\n            <!-- Found location -->\r\n            <div id=\"forecastCountry\" v-show=\"this.locationCity != ''\">\r\n                <p id=\"countryCity\">{{ currentLocation() }}</p>\r\n\r\n            </div>\r\n\r\n            <div v-show=\"this.locationCity != '' && this.locationCity != this.notFoundForecast\">\r\n                <router-view></router-view>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <countries-codes @getCodes=\"getCountriesCodes\" />\r\n</template>\r\n\r\n<script>\r\n\r\nimport Papa from 'papaparse';\r\nimport { extensionsMixin } from '../js/extensionsMixin.js'\r\nimport { resourcesMixin } from '../js/resourcesMixin.js'\r\nimport CountriesCodes from \"./components/CountriesCodes\";\r\nimport CountriesTextBox from \"./components/CountriesTextBox\";\r\nimport ForecastTypeTabs from \"./components/ForecastTypeTabs\";\r\n\r\nimport View from 'ol/View'\r\nimport Map from 'ol/Map'\r\nimport TileLayer from 'ol/layer/Tile'\r\nimport Feature from 'ol/Feature'\r\nimport OSM from 'ol/source/OSM'\r\n\r\nimport VectorSource from \"ol/source/Vector\";\r\nimport Point from \"ol/geom/Point\";\r\nimport VectorLayer from \"ol/layer/Vector\";\r\n\r\nimport { fromLonLat } from 'ol/proj'\r\n\r\n// importing the OpenLayers stylesheet\r\nimport 'ol/ol.css'\r\n\r\nexport default {\r\n    components: {\r\n        CountriesCodes,\r\n        CountriesTextBox,\r\n        ForecastTypeTabs\r\n    },\r\n\r\n    mixins: [extensionsMixin, resourcesMixin],\r\n    data() {\r\n        return {\r\n            countriesCodes: [], // all countries with codes from the CSV file\r\n            countriesCities: [], // countries codes, cities and coordinates from the CSV file\r\n            mapObject: undefined, // OpenStreetMap map\r\n            locationCity: '', // city name in the text area to find a place  \r\n            locationCityEng: '', // city name in English in the text area to find a place \r\n            locationCountry: '', // country name in the text area for looking a place  \r\n            locationCountryCode: '',\r\n            locationCoord: '', // coordinates of place\r\n            weatherApi: \"49698eb024149b3ee8492a86f8df67ec\",  // api Open Weather Map\r\n            forecastType: '', // chosen weather forecast type\r\n\r\n        }\r\n    }, //data \r\n\r\n\r\n    created() {\r\n        window.addEventListener(\"resize\", this.resizeHandler);\r\n    },\r\n    destroyed() {\r\n        window.removeEventListener(\"resize\", this.resizeHandler);\r\n    },\r\n    mounted() {\r\n        this.setShortWeatherArea();\r\n\r\n        //this is where is created the OpenLayers map\r\n        this.mapObject = new Map({\r\n            // the map will be created using the 'map-root' ref\r\n            target: this.$refs['map-root'],\r\n            layers: [\r\n                // adding a background tiled layer\r\n                new TileLayer({\r\n                    source: new OSM() // tiles are served by OpenStreetMap\r\n                }),\r\n            ],\r\n\r\n            // the map view will initially show the whole world\r\n            view: new View({\r\n                zoom: 0,\r\n                center: [0, 0],\r\n                constrainResolution: true\r\n            }),\r\n        });\r\n\r\n        this.forecastType = this.forecastTypes.now;\r\n    }, //mounted \r\n\r\n    computed: {\r\n\r\n    }, //computed \r\n\r\n    methods: {\r\n\r\n        searchLocationClick() {\r\n            this.proceedForecastType();\r\n            this.setNormalWeatherArea();\r\n        }, //searchLocationClick \r\n\r\n        getCountriesCodes(codeName, cityName) {\r\n            this.countriesCodes = codeName;\r\n            this.countriesCities = cityName;\r\n        },\r\n\r\n\r\n        /**\r\n         * Navigation and applying type of weather\r\n         */\r\n        async getForecastType(type) {\r\n            this.forecastType = type;\r\n            await this.proceedForecastType();\r\n        }, //getForecastType\r\n\r\n        /**\r\n         * Forecast for now\r\n         */\r\n        async getNowWeather() {\r\n            this.calculateCoordinates();\r\n            let foundData = await this.isFoundLocation(this.locationCityEng, this.locationCountryCode);\r\n            if (foundData != undefined) {\r\n                if (this.locationCoord == '') {\r\n                    this.reCenterMap(foundData['coord']['lat'], foundData['coord']['lon']);\r\n                }\r\n                this.$router.push({\r\n                    name: 'Now',\r\n                    params: {\r\n                        currentCity: this.locationCity,\r\n                        currentCountry: this.locationCountry,\r\n                        forecastData: JSON.stringify(foundData)\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this.locationCoord == '') {\r\n                    this.resetMap();\r\n                }\r\n            }\r\n        }, //getNowWeather\r\n\r\n        /**\r\n         * Weather forecast for today\r\n         */\r\n        async getTodayWeather() {\r\n\r\n            this.calculateCoordinates();\r\n\r\n            let foundData = await this.isFoundLocation(this.locationCityEng, this.locationCountryCode);\r\n\r\n            if (foundData != undefined) {\r\n\r\n                if (this.locationCoord == '') {\r\n                    this.reCenterMap(foundData['city']['coord']['lat'], foundData['city']['coord']['lon']);\r\n                }\r\n                let woTime = this.dateWithoutTime;\r\n                let today = woTime(new Date());\r\n                let resultsData = foundData.list.filter(function (item) {\r\n                    let itemDate = new Date(item['dt_txt']);\r\n                    let dateWithoutTime = woTime(itemDate);\r\n                    if (dateWithoutTime.valueOf() == today.valueOf()) {\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                this.$router.push({\r\n                    name: 'Today',\r\n                    params: {\r\n                        currentCity: this.locationCity,\r\n                        currentCountry: this.locationCountry,\r\n                        forecastData: JSON.stringify(resultsData)\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this.locationCoord == '') {\r\n                    this.resetMap();\r\n                }\r\n            }\r\n        }, //getTodayWeather\r\n\r\n        /**\r\n         * Forecast for 5 days\r\n         */\r\n        async getFiveDaysWeather() {\r\n\r\n            this.calculateCoordinates();\r\n\r\n            let foundData = await this.isFoundLocation(this.locationCityEng, this.locationCountryCode);\r\n            if (foundData != undefined) {\r\n\r\n                if (this.locationCoord == '') {\r\n                    this.reCenterMap(foundData['city']['coord']['lat'], foundData['city']['coord']['lon']);\r\n                }\r\n                // data about forecast for every day at 15.00 and 0.00\r\n                let resultsData = foundData.list.filter(function (item) {\r\n                    let itemDate = new Date(item['dt_txt']);\r\n\r\n                    if (itemDate.getHours() == 15 || itemDate.getHours() == 0) {\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                this.$router.push({\r\n                    name: 'FiveDays',\r\n                    params: {\r\n                        currentCity: this.locationCity,\r\n                        currentCountry: this.locationCountry,\r\n                        forecastData: JSON.stringify(resultsData)\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this.locationCoord == '') {\r\n                    this.resetMap();\r\n                }\r\n            }\r\n        }, //getFiveDaysWeather\r\n\r\n\r\n        /**\r\n         *  navigation in the tab depending on the forecast type\r\n         */\r\n        async proceedForecastType() {\r\n\r\n            switch (this.forecastType) {\r\n                case this.forecastTypes.now:\r\n                    await this.getNowWeather();\r\n                    break;\r\n                case this.forecastTypes.today:\r\n                    await this.getTodayWeather();\r\n                    break;\r\n\r\n                case this.forecastTypes.fiveDays:\r\n                    await this.getFiveDaysWeather();\r\n                    break;\r\n                default:\r\n                // no topic provided\r\n\r\n            }\r\n        }, //proceedForecastType\r\n\r\n        /**\r\n        * convertion of the coordinates from DDDMM  format into decimal degrees\r\n        */\r\n        calculateCoordinates() {\r\n            if (this.locationCoord != '') {\r\n                // splits string with coordinates by space\r\n                let locodeCoord = this.locationCoord.split(\" \");\r\n                let a = locodeCoord[0].slice(0, -1);\r\n                let b = locodeCoord[1].slice(0, -1);\r\n                let quotientA = Math.floor(a / 100);\r\n                let quotientB = Math.floor(b / 100);\r\n\r\n                let remainderA = (a / 100) % 1;\r\n                let remainderB = (b / 100) % 1;\r\n\r\n                let lat = quotientA + (remainderA / 0.6);\r\n                let long = quotientB + (remainderB / 0.6);\r\n\r\n                if (locodeCoord[0].includes('S') || locodeCoord[0].includes('W')) {\r\n                    lat *= (-1);\r\n                }\r\n\r\n                if (locodeCoord[1].includes('S') || locodeCoord[1].includes('W')) {\r\n                    long *= (-1);\r\n                }\r\n\r\n                this.reCenterMap(lat, long);\r\n            }\r\n\r\n        }, //calculateCoordinates \r\n\r\n        /**\r\n        * centers the map\r\n        */\r\n        reCenterMap(latitude, longitude) {\r\n\r\n            //centers the map on the cooordinate\r\n            this.mapObject.getView().setZoom(12);\r\n            this.mapObject.getView().setCenter(fromLonLat([longitude, latitude]));\r\n\r\n            // removes previous marker\r\n            this.removeMapMarker();\r\n\r\n            // puts the marker dot\r\n            const source = new VectorSource();\r\n            source.addFeatures([new Feature(new Point(fromLonLat([longitude, latitude])))]);\r\n\r\n            const layer = new VectorLayer({\r\n                source: source,\r\n                name : \"Marker\",\r\n                style: {\r\n                    'circle-radius': 10,\r\n                    'circle-fill-color': 'rgba(20, 100, 240, 0.3)',\r\n                    'circle-stroke-color': 'rgba(20, 100, 240, 0.7)',\r\n                },\r\n            });\r\n            \r\n            this.mapObject.addLayer(layer);\r\n\r\n        }, //reCenterMap  \r\n\r\n        // removes dot marker on the map\r\n        removeMapMarker() {\r\n            this.mapObject.getLayers().getArray()\r\n                .filter(layer => layer.get('name') === 'Marker')\r\n                .forEach(layer => this.mapObject.removeLayer(layer));\r\n        },\r\n\r\n        /**\r\n        * resets map zoom and coordinates to zero\r\n        */\r\n        resetMap() {\r\n            this.mapObject.getView().setZoom(0);\r\n            this.mapObject.getView().setCenter([0, 0]);\r\n        }, //resetMap  \r\n\r\n\r\n        setShortWeatherArea() {\r\n            let value = this.getRootVarCSS('--shortAreaHeight');\r\n            this.setRootVarCSS('--weatherAreaHeight', value)\r\n        }, //setShortWeatherArea  \r\n\r\n        setNormalWeatherArea() {\r\n            let value = this.getRootVarCSS('--normalAreaHeight');\r\n            this.setRootVarCSS('--weatherAreaHeight', value)\r\n        }, //setNormalWeatherArea  \r\n\r\n\r\n        clearClick() {\r\n            this.locationCity = '';\r\n            this.locationCountryCode = '';\r\n            this.locationCountry = '';\r\n            this.locationCoord = '';\r\n            this.removeMapMarker();\r\n\r\n            this.proceedForecastType();\r\n            this.setShortWeatherArea();\r\n        },\r\n\r\n        /**\r\n         * checks whether found coordinates on  openweathermap\r\n         */\r\n        async isFoundLocation(place, code) {\r\n            if (place != '' && code != '') {\r\n                // forecast type for today and 5 days\r\n                let openWeatherType = '';\r\n                if (this.forecastType == this.forecastTypes.now) {\r\n                    openWeatherType = 'https://api.openweathermap.org/data/2.5/weather?q=' + place +\r\n                        ',' + code + '&appid=' + this.weatherApi + \"&lang=ru\";\r\n                }\r\n                else {\r\n                    openWeatherType = 'https://api.openweathermap.org/data/2.5/forecast?q=' + place +\r\n                        ',' + code + '&appid=' + this.weatherApi + \"&lang=ru\";\r\n                }\r\n\r\n                return await fetch(openWeatherType)\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                        if (data['cod'] == '404' || data['cod'] == undefined) {\r\n                            return undefined;\r\n                        }\r\n                        else {\r\n                            return data;\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }, //isFoundLocation\r\n\r\n        /**\r\n        * finds openweathermap location though text search area\r\n        * paramCity - city in the textbox\r\n        * paramCityEng - city in English\r\n        * paramCountry - country name\r\n        * paramCountryCode - country code\r\n        * paramCoord - coordinates of the city\r\n        */\r\n        async getLocation(paramCity, paramCityEng, paramCountry, paramCountryCode, paramCoord) {\r\n\r\n            if (paramCity != '') {\r\n                let isFound = false; // found coordinates\r\n                let isFoundSecond = false; // found coordinates\r\n\r\n                // if city name contains '=' (for example, Leningrad = Saint Petersburg)\r\n                if (paramCityEng.indexOf('=') > -1) {\r\n                    const substr = paramCity.split(\"=\");\r\n                    const substrEng = paramCityEng.split(\"=\");\r\n                    \r\n                    // search of the left part of '=' (for example, Leningrad)\r\n                    let substrBrackets = substrEng[0].split(\"(\")[0].trim(); // if city name contains '(' (in instance, Rome (Roma) ) \r\n                    let substrBrackets2 = substrEng[1].split(\"(\")[0].trim(); // if city name contains '(' (in instance, Rome (Roma) ) \r\n                    isFound = await this.isFoundLocation(substrBrackets, paramCountryCode);\r\n\r\n                    if (isFound != undefined) {\r\n                        this.locationCity = substr[0];\r\n                        this.locationCityEng = substrBrackets;\r\n                    }\r\n                    else {\r\n                        // search of the right part of '=' (for example, Saint Petersburg)\r\n                        isFoundSecond = await this.isFoundLocation(substrBrackets2, paramCountryCode);\r\n\r\n                        if (isFoundSecond != undefined) {\r\n                            this.locationCity = substr[1];\r\n                            this.locationCityEng = substrBrackets2;\r\n                        }\r\n                        else {\r\n                            this.locationCity = this.notFoundForecast;\r\n                            this.locationCityEng = this.notFoundForecast;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    let substrBrackets = paramCityEng.split(\"(\")[0].trim(); // if city name contains '(' (in instance, Rome (Roma) ) \r\n                    isFound = await this.isFoundLocation(substrBrackets, paramCountryCode);\r\n\r\n                    this.locationCity = isFound != undefined ? paramCity : this.notFoundForecast;\r\n                    this.locationCityEng = isFound != undefined ? substrBrackets : this.notFoundForecast;\r\n                }\r\n\r\n                this.locationCountry = paramCountry;\r\n                this.locationCountryCode = paramCountryCode;\r\n                this.locationCoord = paramCoord;\r\n                this.setNormalWeatherArea();\r\n                await this.proceedForecastType();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * returns current place/country\r\n         */\r\n        currentLocation: function () {\r\n            if (this.locationCity == '') {\r\n                return \" \";\r\n            }\r\n            else {\r\n                if (this.locationCity == this.notFoundForecast) {\r\n                    return this.notFoundForecast;\r\n                }\r\n                else {\r\n                    return this.locationCity + \"/\" + this.locationCountry;\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n        * changing window size\r\n        */\r\n        resizeHandler(e) {\r\n\r\n        },\r\n\r\n    }, //methods \r\n} // export default \r\n</script>\r\n\r\n\r\n\r\n<style >\r\n@import \"../css/variables.css\";\r\n@import \"../css/main.css\";\r\n</style>\r\n\r\n","export const extensionsMixin = {\r\n  created() {\r\n\r\n  },\r\n  data() {\r\n      return {\r\n\r\n      }\r\n    },\r\n    methods: {\r\n      elementById(id) {\r\n          return this.$el.querySelector(id);\r\n        },\r\n\r\n       /**\r\n       * converts Kelvin degrees into Celsius\r\n       */\r\n        convertToCelsius(val)\r\n        {\r\n            return Math.round((val - 273).toFixed(2));\r\n        },\r\n\r\n       /**\r\n       * adds count of days to the date\r\n       */\r\n        addDays (date, days) {\r\n            var date = new Date(date);\r\n            date.setDate(date.getDate() + days);\r\n            return date;\r\n        },\r\n\r\n        /**\r\n         * date without time\r\n         */\r\n        dateWithoutTime (date) {\r\n          var date = new Date(date);\r\n          return date.setHours(0,0,0,0);\r\n        },\r\n\r\n        /**\r\n         * date without time\r\n         */\r\n        getRootVarCSS (varName) {\r\n          let root = document.querySelector(':root');\r\n          let rootStyles = getComputedStyle(root);\r\n          return rootStyles.getPropertyValue(varName);\r\n  \r\n        },\r\n\r\n        setRootVarCSS (varName, value) {\r\n          document.documentElement.style.setProperty(varName, value);\r\n  \r\n        }\r\n    }\r\n}","export const resourcesMixin = {\r\n    data() {\r\n        return {\r\n            forecastTypes: {  \r\n                now: \"Сейчас\", \r\n                today: \"Сегодня\" , \r\n                fiveDays : \"5 дней\"\r\n            }, \r\n\r\n            weatherForecast: 'Прогноз погоды',\r\n            notFoundForecast: 'Прогноз не найден',\r\n            forecastNow: 'Прогноз погоды сейчас в ',\r\n            wind: 'Ветер',\r\n            ms: 'м/с',\r\n            pressure: 'Давление',\r\n            pressureValue: 'мм рт. ст.',\r\n            humidity: 'Влажность',\r\n            cloudiness: 'Облачность',\r\n            forecastFiveDays: 'Прогноз погоды на 5 дней в ',\r\n            temperature: 'Температура:',\r\n            forecastToday: 'Прогноз погоды сегодня в ',\r\n            windSpeed: 'Скорость ветра:',\r\n            searchPlace: 'Поиск места',\r\n            location: 'Местоположение',\r\n\r\n          }\r\n    }\r\n}","<template></template>\r\n\r\n<script>\r\nimport Papa from 'papaparse';\r\n\r\nexport default {\r\n\r\n    data() {\r\n        return {\r\n            allCountriesCities: [], // all countries with codes from the CSV file\r\n            allCountriesCodes: [], // countries codes, cities and coordinates from the CSV file\r\n        }\r\n    },\r\n\r\n    async beforeMount() {\r\n        await this.initialInit();\r\n        this.$emit('getCodes', this.allCountriesCodes, this.allCountriesCities);\r\n    },\r\n\r\n\r\n    methods: {\r\n        async initialInit() {\r\n            this.allCountriesCities = await this.parseCSV('https://practicaldeveloper.github.io/weather_forecast_vue/files/allCitiesWithRus.csv');\r\n            this.allCountriesCodes = await this.parseCSV('https://practicaldeveloper.github.io/weather_forecast_vue/files/allCountriesWithRus.csv');\r\n        },\r\n\r\n        async parseCSV(fileCSV) {\r\n            return new Promise(resolve => {\r\n                Papa.parse(fileCSV, {\r\n                    header: false,\r\n                    download: true,\r\n                    complete: (results) => {\r\n                        resolve(results.data);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style></style>","import { render } from \"./CountriesCodes.vue?vue&type=template&id=988f19aa\"\nimport script from \"./CountriesCodes.vue?vue&type=script&lang=js\"\nexport * from \"./CountriesCodes.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\YJuhno\\\\NewForecastReal\\\\weather_forecast_vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div id=\"searchArea\">\r\n\r\n        <form autocomplete=\"off\" id=\"inputForm\">\r\n\r\n            <div class=\"autocomplete\">\r\n                <input id=\"cityinput\" type=\"text\" class=\"searchTerm\" \r\n                    :placeholder=\"searchPlace\" autocomplete=\"off\"\r\n                    @input=\"updateInput\" @keydown=\"keyDownInput\" \r\n                    data-country=\"\" data-countryCode=\"\" />\r\n\r\n                <button type=\"button\">\r\n                    <div class=\"flex-container\">\r\n                        <i class=\"fa fa-times\" @click=\"clearClick\"></i>\r\n                        <div style=\"width:5px\"></div>\r\n                        <i class=\"fa fa-search\" @click=\"searchClick\"></i>\r\n                    </div>\r\n\r\n                </button>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { extensionsMixin } from '../../js/extensionsMixin.js'\r\nimport { resourcesMixin } from '../../js/resourcesMixin.js'\r\nimport ArraySort from 'array-sort'\r\n\r\nexport default {\r\n    mixins: [extensionsMixin, resourcesMixin],\r\n\r\n    data() {\r\n        return {\r\n            currentFocus: 0, // current position of an item in the container with cities \r\n            cityItemsCount: 0, // count of elements with cities \r\n            firstDivPosition: 0, // y - position of the first element inside DIV of elements array \r\n            maxDivHeight: 600, // max height of the DIV container elements array\r\n            totalDivPosition: 0, // y- lower position of the DIV container with elements array \r\n            selectedDivValue: \"\",\r\n        }\r\n    },\r\n\r\n    props: {\r\n        countriesCodesFilter: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        countriesCitiesFilter: {\r\n            type: Array,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        document.addEventListener('click', this.documentOnClick);\r\n    },\r\n\r\n    beforeDestroy: function () {\r\n        document.removeEventListener('click', this.documentOnClick)\r\n    },\r\n\r\n    async beforeMount() {\r\n\r\n    },\r\n\r\n    methods: {\r\n        documentOnClick: function (e) {\r\n            this.closeAllLists(e.target);\r\n        },\r\n\r\n        /**\r\n        * Gets the text area for place searching \r\n        */\r\n        getCityInput() {\r\n            return this.elementById(\"#cityinput\");\r\n        },\r\n\r\n        /**\r\n        * Gets the form with the text area for place searching \r\n        */\r\n        getInputForm() {\r\n            return this.elementById(\"#inputForm\");\r\n        },\r\n\r\n        searchClick() {\r\n            this.$emit('searchClick');\r\n        },\r\n\r\n        clearClick() {\r\n            this.getCityInput().value = '';\r\n            this.getCityInput().focus();\r\n            this.$emit('clearClick');\r\n        },\r\n\r\n        updateInput(event) {\r\n            var cyrillicPattern = /^[а-яё-\\s/(/ /)/]+$/i; // to detect cyrillic string \r\n            let foundCountriesCities = [{ countryName: \"\", cityName: \"\", countryCode: \"\" }];\r\n            foundCountriesCities = [];\r\n            let value = event.target.value;\r\n\r\n            if (value.length > 2) {\r\n                // checks for latin or cyrillic enter\r\n                let isCyrrilic = cyrillicPattern.test(value);\r\n\r\n                let getCountryName = this.GetCountryNameByCode.bind(this);\r\n                \r\n                \r\n                // to filter all cities for entered value\r\n                this.countriesCitiesFilter.filter(function (itemCountry) {\r\n                    if (itemCountry.length > 1) {\r\n                        let itemCountryCode = itemCountry[0];\r\n                        let itemCityNameEng = itemCountry[1];\r\n                        let itemCityNameRus = itemCountry[2];\r\n                        let itemCoord = itemCountry[3];\r\n                        let city = isCyrrilic ? itemCityNameRus.toLowerCase() : itemCityNameEng.toLowerCase();\r\n                        // checks city name\r\n                        if (city != '' && city.startsWith(value.toLowerCase())) {\r\n                            let countryCode = itemCountry[0];\r\n                            let country = isCyrrilic ? getCountryName(itemCountryCode)[2] : getCountryName(itemCountryCode)[1];\r\n                            let cityName = isCyrrilic ? itemCityNameRus : itemCityNameEng;\r\n\r\n                            let newItemCountry = {\r\n                                countryName: country,\r\n                                cityName: cityName,\r\n                                cityNameEng: itemCityNameEng,\r\n                                countryCode: countryCode,\r\n                                cityCoord: itemCoord\r\n                            };\r\n\r\n                            // if there is no duplicate in array then to add it\r\n                            let countriesFound = foundCountriesCities.find(item => (\r\n                                item.countryName == country &&\r\n                                item.cityName == cityName)\r\n                            );\r\n\r\n                            if (countriesFound == undefined) {\r\n                                foundCountriesCities.push(newItemCountry);\r\n                            }\r\n\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n\r\n\r\n                ArraySort(foundCountriesCities, 'countryName', 'cityName');\r\n                this.showPopupList(foundCountriesCities);\r\n            }\r\n\r\n            if (this.getCityInput().value == '') {\r\n                this.$emit(\r\n                    \"getLocation\",\r\n                    this.getCityInput().value,\r\n                    this.getCityInput().dataset.cityeng,\r\n                    this.getCityInput().dataset.country,\r\n                    this.getCityInput().dataset.countrycode,\r\n                    this.getCityInput().dataset.coord\r\n                );\r\n            }\r\n        }, //updateInput\r\n\r\n        showPopupList(arr) {\r\n            let val = this.getCityInput().value;\r\n\r\n            let listDiv; // common DIV container for all array elements\r\n            let listDivContainer; // DIV container with header\r\n            let itemListDiv; //DIV container with particular array element\r\n\r\n            //hides countries list \r\n            this.closeAllLists();\r\n            if (!val) { return false; }\r\n            this.currentFocus = -1;\r\n\r\n            listDivContainer = document.createElement(\"DIV\");\r\n            listDivContainer.setAttribute(\"id\", \"itemsContainer\");\r\n            listDivContainer.innerHTML = \"<span>\" + this.location + \"</span>\";\r\n            listDivContainer.setAttribute(\"class\", \"autocomplete-itemsContainer\");\r\n            this.getCityInput().parentNode.appendChild(listDivContainer);\r\n\r\n            /*create a DIV element that will contain the items (values):*/\r\n            listDiv = document.createElement(\"DIV\");\r\n            listDiv.setAttribute(\"id\", this.getCityInput().id + \"autocomplete-list\");\r\n            listDiv.setAttribute(\"class\", \"autocomplete-items\");\r\n\r\n            this.cityItemsCount = arr.length;\r\n\r\n            listDiv.setAttribute('style', 'height: auto');\r\n\r\n            /*append the DIV element as a child of the autocomplete container:*/\r\n            listDivContainer.appendChild(listDiv);\r\n\r\n            /*for each item in the array...*/\r\n            for (let arrIndex = 0; arrIndex < arr.length; arrIndex++) {\r\n                /*check if the item starts with the same letters as the text field value:*/\r\n                /*create a DIV element for each matching element:*/\r\n                itemListDiv = document.createElement(\"DIV\");\r\n\r\n                itemListDiv.innerHTML = `<span class='itemCity'> ${arr[arrIndex].cityName}</span>`;\r\n                itemListDiv.innerHTML += `<span class='itemCountry'>   ${arr[arrIndex].countryName}</span>`;\r\n\r\n                /*insert a input field that will hold the current array item's value:*/\r\n                itemListDiv.innerHTML += `\r\n                <input class='itemInput' \r\n                data-country= \"${arr[arrIndex].countryName}\"\r\n                data-countrycode = \"${arr[arrIndex].countryCode}\" \r\n                data-cityeng = \"${arr[arrIndex].cityNameEng}\"\r\n                data-coord = \"${arr[arrIndex].cityCoord}\"\r\n                type='hidden' value= \"${arr[arrIndex].cityName}\">\r\n                `;\r\n\r\n                this.selectedDivValue = itemListDiv.getElementsByTagName(\"input\")[0].value;\r\n\r\n\r\n                let closeLists = this.closeAllLists;\r\n                let city = this.getCityInput();\r\n                let emit = this.$emit;\r\n                itemListDiv.addEventListener('click', function (event) {\r\n                    // sets selected value into the text field \r\n                    city.value =\r\n                        this.getElementsByClassName('itemInput')[0].value;\r\n                    city.dataset.country = this.getElementsByClassName('itemInput')[0].dataset.country;\r\n                    city.dataset.countrycode = this.getElementsByClassName('itemInput')[0].dataset.countrycode;\r\n                    city.dataset.cityeng = this.getElementsByClassName('itemInput')[0].dataset.cityeng;\r\n                    city.dataset.coord = this.getElementsByClassName('itemInput')[0].dataset.coord;\r\n                    emit(\"getLocation\", city.value, city.dataset.cityeng, city.dataset.country,\r\n                        city.dataset.countrycode, city.dataset.coord);\r\n                    closeLists();\r\n                });\r\n\r\n                itemListDiv.style.cursor = \"pointer\";\r\n                listDiv.appendChild(itemListDiv);\r\n\r\n                // y-coordinate of the first element inside list of the cities\r\n                if (arrIndex == 0) {\r\n                    this.firstDivPosition = this.offset(itemListDiv).top;\r\n                }\r\n            }\r\n\r\n\r\n            if (listDiv.clientHeight > this.maxDivHeight) {\r\n                listDiv.setAttribute('style', 'height:' + this.maxDivHeight + 'px');\r\n            }\r\n\r\n            this.totalDivPosition = this.offset(listDiv).top + listDiv.clientHeight;\r\n\r\n\r\n        }, //showPopupList\r\n\r\n        /**\r\n        * position of the element on the screen \r\n        */\r\n        offset(el) {\r\n            var rect = el.getBoundingClientRect(),\r\n                scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n                scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n            return { top: rect.top + scrollTop, left: rect.left + scrollLeft }\r\n        }, //offset\r\n\r\n\r\n        /**\r\n        * Hides list of the countries and cities under the text field field \r\n        */\r\n        closeAllLists(elt) {\r\n            /*close all autocomplete lists in the document,\r\n            except the one passed as an argument:*/\r\n            let x = document.getElementsByClassName(\"autocomplete-items\");\r\n\r\n            let items = document.getElementById(\"itemsContainer\");\r\n            if (items != undefined) {\r\n                items.parentNode.removeChild(items);\r\n            }\r\n\r\n            for (let i = 0; i < x.length; i++) {\r\n                if (elt != x[i] && elt != this.getCityInput()) {\r\n                    x[i].parentNode.removeChild(x[i]);\r\n                }\r\n            }\r\n\r\n        }, //closeAllLists    \r\n\r\n        GetCountryNameByCode(countryCode) {\r\n            let countryName = this.countriesCodesFilter.filter(itemCountry => itemCountry[0] == countryCode);\r\n            return countryName[0];\r\n        }, //GetCountryNameByCode\r\n\r\n        keyDownInput(e) {\r\n            let cityDiv = document.getElementById(this.getCityInput().id + \"autocomplete-list\");\r\n            if (cityDiv) cityDiv = cityDiv.getElementsByTagName(\"div\");\r\n            if (e.keyCode == 40) {\r\n                /* pressed button with arrow DOWN */\r\n                this.currentFocus++;\r\n                /* to make next item noticeable */\r\n                this.addActive(cityDiv, \"down\");\r\n\r\n            } else if (e.keyCode == 38) { //up\r\n                /* pressed button with arrow UP */\r\n                this.currentFocus--;\r\n                /* to make current item noticeable */\r\n                this.addActive(cityDiv, \"up\");\r\n\r\n            } else if (e.keyCode == 13) {\r\n                /*pressed button ENTER */\r\n                e.preventDefault();\r\n                if (this.currentFocus > -1) {\r\n                    /* simulates click event of an \"active\" item */\r\n                    if (cityDiv) cityDiv[this.currentFocus].click();\r\n                }\r\n            }\r\n        }, //keyDownInput \r\n\r\n\r\n        /**\r\n        * makes current item notable\r\n        */\r\n        addActive(cityDiv, direction) {\r\n            /*a function to classify an item as \"active\":*/\r\n            if (!cityDiv) return false;\r\n            /*start by removing the \"active\" class on all items:*/\r\n            this.removeActive(cityDiv);\r\n            if (this.currentFocus >= cityDiv.length) this.currentFocus = 0;\r\n            if (this.currentFocus < 0) {\r\n                this.currentFocus = (cityDiv.length - 1);\r\n            }\r\n\r\n            //\r\n            /*add class \"autocomplete-active\":*/\r\n            cityDiv[this.currentFocus].classList.add(\"autocomplete-active\");\r\n            if (direction == \"down\") {\r\n                // reached lower border of the cities list\r\n                if (this.offset(cityDiv[this.currentFocus]).top + cityDiv[this.currentFocus].clientHeight >=\r\n                    this.totalDivPosition) {\r\n                    cityDiv[this.currentFocus].scrollIntoView(true);\r\n                }\r\n                if (this.currentFocus == 0) {\r\n                    cityDiv[this.currentFocus].scrollIntoView(false);\r\n                }\r\n            }\r\n            else {\r\n                // reached upper border of the cities list\r\n                if (this.offset(cityDiv[this.currentFocus]).top < this.firstDivPosition) {\r\n                    cityDiv[this.currentFocus].scrollIntoView(false);\r\n                }\r\n\r\n                if (this.currentFocus == (this.cityItemsCount - 1)) {\r\n                    cityDiv[this.currentFocus].scrollIntoView(true);\r\n                }\r\n            }\r\n        }, //addActive\r\n\r\n        removeActive(cityDiv) {\r\n\r\n            /*a function to remove the \"active\" class from all autocomplete items:*/\r\n            for (var i = 0; i < cityDiv.length; i++) {\r\n                cityDiv[i].classList.remove(\"autocomplete-active\");\r\n            }\r\n        }, //removeActive\r\n\r\n        /**\r\n        * position of element on the screen\r\n        */\r\n        offset(el) {\r\n            let rect = el.getBoundingClientRect(),\r\n                scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n                scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n            return { top: rect.top + scrollTop, left: rect.left + scrollLeft }\r\n        }, //offset\r\n\r\n\r\n    } //methods\r\n} //export default\r\n</script>\r\n\r\n<style>\r\n@import \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\";\r\n@import \"../../css/variables.css\";\r\n@import \"../../css/autocomplete.css\";\r\n@import \"../../css/countriesInput.css\";\r\n</style>","import { render } from \"./CountriesTextBox.vue?vue&type=template&id=6f4d1546\"\nimport script from \"./CountriesTextBox.vue?vue&type=script&lang=js\"\nexport * from \"./CountriesTextBox.vue?vue&type=script&lang=js\"\n\nimport \"./CountriesTextBox.vue?vue&type=style&index=0&id=6f4d1546&lang=css\"\n\nimport exportComponent from \"D:\\\\YJuhno\\\\NewForecastReal\\\\weather_forecast_vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"tab\">\r\n     <button  \r\n        v-for=\"item in forecastTypes\" \r\n        class=\"tablinks\" \r\n        @click = \"changeForecast($event, item)\">\r\n        {{ item }}\r\n     </button>\r\n  </div>\r\n</template>\r\n\r\n<script> \r\nimport { extensionsMixin } from '../../js/extensionsMixin.js'\r\nimport { resourcesMixin } from '../../js/resourcesMixin.js'\r\n\r\n  export default {\r\n    mixins: [extensionsMixin, resourcesMixin],\r\n\r\n      methods : {\r\n\r\n          /**\r\n          * Changes forecast type \r\n          */\r\n        changeForecast(evt, type) {\r\n              let i,  tablinks;\r\n\r\n              tablinks = document.getElementsByClassName(\"tablinks\");\r\n              for (i = 0; i < tablinks.length; i++) {\r\n                  tablinks[i].className = tablinks[i].className.replace(\"active\", \"\");\r\n              }\r\n\r\n              evt.currentTarget.className += \" active\";\r\n              this.$emit('getForecastType',  type);\r\n          } \r\n      }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n@import \"../../css/variables.css\";\r\n\r\n/* Style the tab */\r\n.tab {\r\noverflow: hidden;\r\nborder: 1px solid #000000;\r\nbackground-color: #f1f1f1;\r\n}\r\n\r\n/* Style the buttons inside the tab */\r\n.tab button {\r\nbackground-color: inherit;\r\nfloat: left;\r\nborder: none;\r\noutline: none;\r\ncursor: pointer;\r\npadding: 14px 16px;\r\ntransition: 0.3s;\r\nfont-size: 17px;\r\n}\r\n\r\n/* Change background color of buttons on hover */\r\n.tab button:hover {\r\nbackground-color: #ddd;\r\n}\r\n\r\n/* Create an active/current tablink class */\r\n.tab button.active {\r\nbackground-color: #ccc;\r\n}\r\n\r\n/* Style the tab content */\r\n.tabcontent {\r\ndisplay: none;\r\npadding: 6px 12px;\r\nborder: 1px solid #ccc;\r\nborder-top: none;\r\n}\r\n\r\n</style>\r\n","import { render } from \"./ForecastTypeTabs.vue?vue&type=template&id=e4d4a4f2\"\nimport script from \"./ForecastTypeTabs.vue?vue&type=script&lang=js\"\nexport * from \"./ForecastTypeTabs.vue?vue&type=script&lang=js\"\n\nimport \"./ForecastTypeTabs.vue?vue&type=style&index=0&id=e4d4a4f2&lang=css\"\n\nimport exportComponent from \"D:\\\\YJuhno\\\\NewForecastReal\\\\weather_forecast_vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5a7f26ce\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5a7f26ce&lang=css\"\n\nimport exportComponent from \"D:\\\\YJuhno\\\\NewForecastReal\\\\weather_forecast_vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n\r\n  <div class=\"Title2\">\r\n                <p>{{forecastNow}} {{ $route.params.currentCity }} </p>\r\n   </div>\r\n\r\n  <div id=\"weatherInfoNow\" class=\"weatherInfo\">\r\n    <div id=\"weatherDescription\">\r\n      <div id=\"temperature\">\r\n        <img v-bind:src=\"getIcon\" width=\"90\" height=\"90\">\r\n        <p>{{ getTemperature }}&deg;C</p>\r\n      </div>\r\n\r\n      <div id=\"description\">\r\n         <p>{{ getDescription }}</p> \r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"info\">\r\n      <div class=\"flex-item now-item\">{{wind}}\r\n        <div>\r\n          {{ getWind }} {{ms}}\r\n        </div>\r\n      </div>\r\n      <div class=\"flex-item now-item\">{{pressure}}\r\n        <div>\r\n          {{ getPressure }} {{pressureValue}}\r\n        </div>\r\n      </div>\r\n      <div class=\"flex-item now-item\">{{humidity}}\r\n        <div>\r\n          {{ getHumidity }} %\r\n        </div>\r\n      </div>\r\n      <div class=\"flex-item now-item\">{{cloudiness}}\r\n        <div>\r\n          {{ getClouds }} %\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { extensionsMixin } from '../../js/extensionsMixin.js'\r\nimport { resourcesMixin } from '../../js/resourcesMixin.js'\r\n\r\nexport default {\r\n  mixins: [extensionsMixin, resourcesMixin],\r\n  props: ['currentCity', 'currentCountry', 'forecastData'],\r\n\r\n  async beforeMount() {\r\n\r\n  },\r\n  methods: {\r\n\r\n    /** Returns data about weather from  openweathermap */\r\n    getData: function () {\r\n      let data = this.$route.params.forecastData;\r\n\r\n      if (data == undefined || data == '\"\"') {\r\n        return \"\";\r\n      }\r\n      else {\r\n        return JSON.parse(data);\r\n      }\r\n    },\r\n  },\r\n\r\n  computed: {\r\n\r\n\r\n    /**\r\n     * \r\n    * Returns data about temperature as string\r\n    */\r\n    getTemperature: function () {\r\n      let data = this.getData() != \"\" ?\r\n        this.convertToCelsius(this.getData()['main']['temp']) : this.getData();\r\n      return data;\r\n    }, //getTemperature \r\n\r\n    /**\r\n    * Returns data about wind\r\n    */\r\n    getWind: function () {\r\n      let data = this.getData() != \"\" ? this.getData()['wind']['speed'] : this.getData();\r\n      return data;\r\n    }, //getWind \r\n\r\n    /**\r\n    * Returns data about pressure\r\n    */\r\n    getPressure: function () {\r\n      let data = this.getData() != \"\" ? this.getData()['main']['pressure'] : this.getData();\r\n      return data;\r\n    }, //getPressure \r\n\r\n    /**\r\n    * Returns data about clouds\r\n    */\r\n    getClouds: function () {\r\n      let data = this.getData() != \"\" ? this.getData()['clouds']['all'] : this.getData();\r\n      return data;\r\n    }, //getClouds \r\n\r\n    /**\r\n    * Returns data about humidity\r\n    */\r\n    getHumidity: function () {\r\n      let data = this.getData() != \"\" ? this.getData()['main']['humidity'] : this.getData();\r\n      return data;\r\n    }, //getHumidity \r\n\r\n    /**\r\n    * Returns data weather description\r\n    */\r\n    getDescription: function () {\r\n      let data = this.getData() != \"\" ? this.getData()['weather'][0]['description'] : this.getData();\r\n      return data;\r\n    }, //getDescription \r\n\r\n    /**\r\n    * Returns data weather icon\r\n    */\r\n    getIcon: function () {\r\n      let data = \"\";\r\n      let icon = \"\";\r\n\r\n      if (this.getData() != \"\") {\r\n        data = String(this.getData()['weather'][0]['icon']);\r\n        icon = \"https://openweathermap.org/img/wn/\" + data + \"@2x.png\";\r\n      }\r\n      else {\r\n        icon = \"\";\r\n      }\r\n\r\n      return icon;\r\n    }, //getIcon \r\n\r\n  }, //computed \r\n\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n#weatherDescription {\r\n  color: white;\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translate(-45%, -50%);\r\n  line-height: 0px;\r\n  font-family: \"Bookman Old Style\", serif;\r\n}\r\n\r\n#temperature {\r\n  font-size: 50px;\r\n  text-align: center;\r\n  display: flex;\r\n}\r\n\r\nimg {\r\n  margin: auto;\r\n}\r\n\r\n#description {\r\n  text-align: center;\r\n  line-height: 15px;\r\n  font-size: 20px;\r\n}\r\n\r\n#info {\r\n  height: 70px;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  display: flex;\r\n}\r\n\r\n.now-item {\r\n  padding: 10px;\r\n}\r\n</style>\r\n","import { render } from \"./ForecastNow.vue?vue&type=template&id=877e2f54\"\nimport script from \"./ForecastNow.vue?vue&type=script&lang=js\"\nexport * from \"./ForecastNow.vue?vue&type=script&lang=js\"\n\nimport \"./ForecastNow.vue?vue&type=style&index=0&id=877e2f54&lang=css\"\n\nimport exportComponent from \"D:\\\\YJuhno\\\\NewForecastReal\\\\weather_forecast_vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <!-- <div>\r\n        <h1>{{forecastToday}} {{ $route.params.currentCity }} </h1>\r\n    </div> -->\r\n\r\n\r\n    <div class=\"Title2\">\r\n                <p>{{forecastToday}} {{ $route.params.currentCity }} </p>\r\n   </div>\r\n   \r\n    <div class=\"weatherInfo\">\r\n\r\n        <!-- Time and weather icon-->\r\n        <div class=\"weatherDescriptionToday\">\r\n            <div v-for=\"item in getForecastData\" class=\"flex-item today-item\">\r\n                <div>\r\n                    {{ item.time }}<sup> 00</sup>\r\n                </div>\r\n\r\n                <div>\r\n                    <img :src=\"item.icon\" width=\"60\" height=\"60\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"weatherHeader\">\r\n            {{temperature}}\r\n        </div>\r\n\r\n        <!-- Temperature-->\r\n        <div class=\"weatherDescriptionToday\" style=\"padding-bottom: var(--weatherPadding)\">\r\n            <div v-for=\"item in getForecastData\" class=\"flex-item today-item\">\r\n                <div>\r\n                    {{ item.temperature }}&deg;C\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"weatherHeader\">\r\n            {{windSpeed}}\r\n        </div>\r\n\r\n        <!-- Wind speed -->\r\n        <div class=\"weatherDescriptionToday\" style=\"padding-bottom: var(--weatherPadding)\">\r\n            <div v-for=\"item in getForecastData\" class=\"flex-item today-item\">\r\n\r\n                <div>\r\n                    {{ item.wind }} {{ms}}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { extensionsMixin } from '../../js/extensionsMixin.js'\r\nimport { resourcesMixin } from '../../js/resourcesMixin.js'\r\n\r\nexport default {\r\n    mixins: [extensionsMixin, resourcesMixin],\r\n    props: ['currentCity', 'currentCountry', 'forecastData'],\r\n\r\n    async beforeMount() {\r\n\r\n    },\r\n\r\n    methods: {\r\n\r\n        /** Returns data about weather forecast from openweathermap */\r\n        getData: function () {\r\n            let data = this.$route.params.forecastData;\r\n            if (data == undefined || data == '\"\"') {\r\n                return \"\";\r\n            }\r\n            else {\r\n                return JSON.parse(data);\r\n            }\r\n        },\r\n    },\r\n\r\n    computed: {\r\n        /**\r\n        * Gets weather forecast data\r\n        */\r\n        getForecastData: function () {\r\n\r\n            let forecastData = [{\r\n                time: \"\",\r\n                temperature: \"\",\r\n                wind: \"\",\r\n                icon: \"\"\r\n            }];\r\n            forecastData = [];\r\n\r\n            if (this.getData() != \"\") {\r\n                let convert = this.convertToCelsius;\r\n                this.getData().forEach(function (item, index, array) {\r\n                    if (index < 7) {\r\n                        let temp = convert(item['main']['temp']);\r\n                        let windSpeed = item['wind']['speed'];\r\n                        let iconData = String(item['weather'][0]['icon']);\r\n                        let iconPic = \"https://openweathermap.org/img/wn/\" + iconData + \"@2x.png\";\r\n                        let itemDate = new Date(item['dt_txt']);\r\n                        let dateWithoutTime = itemDate.getHours();\r\n\r\n                        let forecastItem = {\r\n                            time: dateWithoutTime,\r\n                            temperature: temp,\r\n                            wind: windSpeed,\r\n                            icon: iconPic\r\n                        };\r\n\r\n                        forecastData.push(forecastItem);\r\n                    }\r\n\r\n                });\r\n            }\r\n            return forecastData;\r\n        }, //getForecastData \r\n\r\n    }, //computed \r\n}\r\n</script>\r\n\r\n<style>\r\n@import \"../../css/variables.css\";\r\n\r\n.weatherDescriptionToday {\r\n    display: flex;\r\n\r\n}\r\n\r\n.weatherHeader {\r\n    padding: 0 0 0 var(--weatherPadding);\r\n    color: white;\r\n}\r\n\r\n.today-item {\r\n    padding: var(--weatherPadding) 0 0 0;\r\n    width: 50px;\r\n}\r\n</style>\r\n","import { render } from \"./ForecastToday.vue?vue&type=template&id=7828ee0f\"\nimport script from \"./ForecastToday.vue?vue&type=script&lang=js\"\nexport * from \"./ForecastToday.vue?vue&type=script&lang=js\"\n\nimport \"./ForecastToday.vue?vue&type=style&index=0&id=7828ee0f&lang=css\"\n\nimport exportComponent from \"D:\\\\YJuhno\\\\NewForecastReal\\\\weather_forecast_vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <!-- <div>\r\n        <h1>{{forecastFiveDays}} {{ $route.params.currentCity }} </h1>\r\n    </div> -->\r\n\r\n    <div class=\"Title2\">\r\n                <p>{{forecastFiveDays}} {{ $route.params.currentCity }} </p>\r\n   </div>\r\n\r\n    <div class=\"weatherInfo\">\r\n\r\n        <div class=\"weatherInfoMain\">\r\n            <div v-for=\"item in getForecastData\" class=\"flex-item\">\r\n\r\n                <!-- Day of week -->\r\n                <div style=\"padding-top: var(--weatherPadding)\">\r\n                    {{ item.day }}\r\n                </div>\r\n\r\n                <div>\r\n                    {{ item.date }} {{ item.month }}\r\n                    <!-- Time of forecast -->\r\n                    <div class=\"weatherInfoSub\" style=\"padding-top: var(--weatherPadding)\">\r\n                        <div class=\"flex-item\">\r\n                            {{ item.forecastItem.time }}<sup> 00</sup>\r\n                        </div>\r\n\r\n                        <div class=\"flex-item\" v-show=\"item.prevForecastItem != undefined\">\r\n                            <span v-if=\"item.prevForecastItem != undefined\">\r\n                                {{ item.prevForecastItem.time }}<sup> 00</sup>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <!-- Weather icon -->\r\n                    <div class=\"weatherInfoSub\">\r\n                        <div class=\"flex-item\">\r\n                            <img :src=\"item.forecastItem.icon\" width=\"40\" height=\"40\">\r\n                        </div>\r\n\r\n                        <div class=\"flex-item\" v-show=\"item.prevForecastItem != undefined\">\r\n                            <span v-if=\"item.prevForecastItem != undefined\">\r\n                                <img :src=\"item.prevForecastItem.icon\" width=\"40\" height=\"40\">\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div class=\"weatherHeader\" style=\"padding-bottom: var(--weatherPadding)\">\r\n            {{ temperature }}\r\n        </div>\r\n\r\n        <div class=\"weatherInfoMain\">\r\n            <div v-for=\"item in getForecastData\" class=\"flex-item\">\r\n                <!-- Temperature -->\r\n                <div class=\"weatherInfoSub\">\r\n                    <div class=\"flex-item\">\r\n                        {{ item.forecastItem.temperature }}&deg;C\r\n                    </div>\r\n\r\n                    <div class=\"flex-item\" style=\"padding-bottom: var(--weatherPadding)\"\r\n                        v-show=\"item.prevForecastItem != undefined\">\r\n                        <span v-if=\"item.prevForecastItem != undefined\">\r\n                            {{ item.prevForecastItem.temperature }}&deg;C\r\n                        </span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { extensionsMixin } from '../../js/extensionsMixin.js'\r\nimport { resourcesMixin } from '../../js/resourcesMixin.js'\r\n\r\nexport default {\r\n    mixins: [extensionsMixin, resourcesMixin],\r\n    props: ['currentCity', 'currentCountry', 'forecastData'],\r\n\r\n    async beforeMount() {\r\n\r\n    },\r\n    methods: {\r\n\r\n        /** Gets weather data from openweathermap */\r\n        getData: function () {\r\n            let data = this.$route.params.forecastData;\r\n            if (data == undefined || data == '\"\"') {\r\n                return \"\";\r\n            }\r\n            else {\r\n                return JSON.parse(data);\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Gets weather data for the element\r\n        */\r\n        getItemForecastData: function (item) {\r\n            let itemDate = new Date(item['dt_txt']);\r\n            let temp = this.convertToCelsius(item['main']['temp']);\r\n            let windSpeed = item['wind']['speed'];\r\n            let iconData = String(item['weather'][0]['icon']);\r\n            let iconPic = \"https://openweathermap.org/img/wn/\" + iconData + \"@2x.png\";\r\n\r\n            let dateWithoutTime = itemDate.getHours();\r\n\r\n            let forecastItem = {\r\n                time: dateWithoutTime,\r\n                temperature: temp,\r\n                wind: windSpeed,\r\n                icon: iconPic\r\n            };\r\n\r\n            return forecastItem;\r\n        },\r\n    },\r\n\r\n    computed: {\r\n        /**\r\n        * Gets data about weather in the required format\r\n        */\r\n        getForecastData: function () {\r\n\r\n            let forecastData = [];\r\n\r\n            if (this.getData() != \"\") {\r\n                let getForecastItem = this.getItemForecastData;\r\n                let prevDate = 0; //prev. date of the weather item\r\n                let prevItem = undefined; // prev. weather item\r\n                this.getData().forEach(function (item, index, array) {\r\n                    const weekday =\r\n                        [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"];\r\n\r\n                    let itemDate = new Date(item['dt_txt']);\r\n                    let monthName = itemDate.toLocaleString('ru-RU', {\r\n                        month: 'short'\r\n                    });\r\n                    let dayName = weekday[itemDate.getDay()];\r\n\r\n                    //  splitting elements to 15.00 and 0.00\r\n                    if (prevDate == itemDate.getDate() || prevDate == 0) {\r\n                        let dateItem = {};\r\n\r\n                        let forecastItemData = getForecastItem(item);\r\n                        let forecastPrevItemData = prevItem != undefined ?\r\n                            getForecastItem(prevItem) : undefined;\r\n\r\n                        if (index == 0 || itemDate.getDate() == 1) {\r\n                            // show month name\r\n                            dateItem = {\r\n                                date: itemDate.getDate(),\r\n                                month: monthName,\r\n                                day: dayName,\r\n                                forecastItem: forecastItemData,\r\n                                prevForecastItem: forecastPrevItemData\r\n                            };\r\n                        }\r\n                        else {\r\n                            // don't show month name\r\n                            dateItem = {\r\n                                date: itemDate.getDate(),\r\n                                month: \"\",\r\n                                day: dayName,\r\n                                forecastItem: forecastItemData,\r\n                                prevForecastItem: forecastPrevItemData\r\n                            };\r\n                        }\r\n\r\n                        forecastData.push(dateItem);\r\n                    }\r\n\r\n                    prevDate = itemDate.getDate();\r\n                    prevItem = item;\r\n\r\n                });\r\n            }\r\n\r\n            return forecastData;\r\n        }, //getForecastData \r\n\r\n    }, //computed \r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n@import \"../../css/variables.css\";\r\n\r\n.weatherInfoMain,\r\n.weatherInfoSub {\r\n    display: flex;\r\n}\r\n\r\n.weatherInfoSub {\r\n    padding: 0;\r\n}\r\n</style>\r\n\r\n","import { render } from \"./ForecastFiveDays.vue?vue&type=template&id=2823e54c\"\nimport script from \"./ForecastFiveDays.vue?vue&type=script&lang=js\"\nexport * from \"./ForecastFiveDays.vue?vue&type=script&lang=js\"\n\nimport \"./ForecastFiveDays.vue?vue&type=style&index=0&id=2823e54c&lang=css\"\n\nimport exportComponent from \"D:\\\\YJuhno\\\\NewForecastReal\\\\weather_forecast_vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import ForecastNow from \"@/pages/ForecastNow\";\r\nimport ForecastToday from \"@/pages/ForecastToday\";\r\nimport ForecastFiveDays from \"@/pages/ForecastFiveDays\";\r\nimport { createRouter, createWebHistory } from \"vue-router\";\r\n\r\nconst routes = [\r\n    {\r\n        name: 'Now',\r\n        path: '/ForecastNow',\r\n        component: ForecastNow,\r\n        props: true\r\n    },\r\n    {\r\n        name: 'Today',\r\n        path: '/ForecastToday',\r\n        component: ForecastToday,\r\n        props: true\r\n    },\r\n    {\r\n        name: 'FiveDays',\r\n        path: '/ForecastFiveDays',\r\n        component: ForecastFiveDays,\r\n        props: true\r\n    },\r\n]\r\n\r\nconst router = createRouter({\r\n    routes,\r\n    history: createWebHistory(process.env.BASE_URL)\r\n})\r\n\r\nexport default router;","import { createApp } from 'vue'\r\nimport App from './App'\r\nimport router from '@/router/router';\r\n\r\nconst app = createApp(App);\r\napp\r\n    .use(router)\r\n    .mount('#app')\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ForecastNow.vue?vue&type=style&index=0&id=877e2f54&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ForecastTypeTabs.vue?vue&type=style&index=0&id=e4d4a4f2&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ForecastFiveDays.vue?vue&type=style&index=0&id=2823e54c&lang=css\""],"sourceRoot":""}